{
    "contents" : "\n# Reproducible Research: Peer Assessment 1\n####*Matyas Theuer*\n\n\nThis document is my solution to Peer Assignment 1 of course [Reproducible Research](https://class.coursera.org/repdata-036) on [Coursera](https://www.coursera.org). \n\nThis assignment makes use of data from a personal activity monitoring device.\nThis device collects data at 5 minute intervals through out the day. The data\nconsists of two months of data from an anonymous individual collected during\nthe months of October and November, 2012 and include the number of steps\ntaken in 5 minute intervals each day.\n\n### Dataset\n\nThe data for this assignment can be downloaded from the course web site: \n\n* Dataset: [Activity monitoring data](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip) [52K]\n\nThe variables included in this dataset are:\n\n* steps: Number of steps taking in a 5-minute interval (missing values are coded as NA)\n\n* date: The date on which the measurement was taken in YYYY-MM-DD format\n\n* interval: Identifier for the 5-minute interval in which measurement was taken\n\nThe dataset is stored in a comma-separated-value (CSV) file and there are a total of 17,568 observations in this dataset.\n\n### Prepare environment\n\n```{r set_options}\nlibrary(knitr)\nlibrary(ggplot2)\nSys.setlocale(\"LC_TIME\", \"English\")\nopts_chunk$set(echo = TRUE, results = 'hold',results='markup')\n```\n\n### Loading and preprocessing the data\n\nLoad data from csv file (unzip data if necessary).\n\n```{r}\nif(!file.exists('activity.csv')){\n    unzip('activity.zip')\n}\nactivityData <- read.csv('activity.csv', stringsAsFactors = FALSE)\n```\n\nLet's take a look on the data\n```{r}\nhead(activityData)\nstr(activityData)\n```\n\nWe can see that some data is missing. We'll deal with that later. Now we transform date strings to propper date format.\n\n```{r}\nactivityData$date <- as.Date(activityData$date, \"%Y-%m-%d\")\n```\n\n### What is mean total number of steps taken per day?\n\nNow we agregate number of steps for each date, plot histogram and calculate mean and median.\n```{r}\nsteps_per_day <- aggregate(steps ~ date, activityData, sum)\nggplot(steps_per_day, aes(x = steps)) + \n       geom_histogram(binwidth = 800,fill=\"coral3\") + \n        labs(title=\"Steps per Day\", \n             x = \"Number of Steps\", y = \"Count\") \nsteps.mean <- mean(steps_per_day$steps, na.rm = TRUE)\nsteps.median <- median(steps_per_day$steps, na.rm = TRUE)\n```\nMean of steps per day is  **`r format(steps.mean,digits = 8)`** and median is **`r format(steps.median,digits = 8)`**.\n\n\n### What is the average daily activity pattern?\n\nLet's show the daily average activity pattern and find interval with highest average number of steps. We skip missing values in dataset.\n```{r}\nsteps_per_interval <- aggregate(steps ~ interval, activityData, FUN=mean, na.rm=TRUE, na.action=\"na.pass\")\nggplot(steps_per_interval, aes(x=interval, y=steps)) +   \n        geom_line(size=1, color=\"coral3\") +  \n        labs(title=\"Average Daily Activity Pattern\", x=\"Interval\", y=\"Number of steps\")\nsteps.max.int <- steps_per_interval$interval[which.max(steps_per_interval$steps)]\nsteps.max <- steps_per_interval$steps[steps_per_interval$interval==steps.max.int]\n```\n\nHighest average number of steps (**`r format(steps.max,digits = 8)`**) is in interval **`r format(steps.max.int,digits = 4)`**.\n\n\n### Imputing missing values\n\n```{r}\nna.index <- which(is.na(activityData$steps))\nsteps.missing <-length(na.index) \n```\n\nThere are **`r format(steps.missing,digits = 5)`** values in the dataset. There are various ways how to impute them. I choose to replace missing values by mean of non-missing values in each 5-minute interval. \n\n```{r}\nactivityDataImp <- activityData\nactivityDataImp$steps[na.index] <- steps_per_interval$steps[activityDataImp$interval[na.index]/5+1] \n```\n\nWe got a new dataset without missig values.\n```{r}\nstr(activityDataImp)\n```\n\nWith this new dataset we agregate number of steps for each date, plot histogram and calculate mean and median.\n```{r}\nsteps_per_dayImp <- aggregate(steps ~ date, activityDataImp, sum)\nggplot(steps_per_dayImp, aes(x = steps)) + \n       geom_histogram(binwidth = 1200,fill=\"coral3\") + \n        labs(title=\"Steps per Day (Filled Dataset)\", \n             x = \"Number of Steps\", y = \"Count\") \nsteps.meanImp <- mean(steps_per_dayImp$steps, na.rm = TRUE)\nsteps.medianImp <- median(steps_per_dayImp$steps, na.rm = TRUE)\n```\nMean of steps per day (for filled dataset) is  **`r format(steps.meanImp,digits = 8)`** and median is **`r format(steps.medianImp,digits = 8)`**.\n\n\n### Are there differences in activity patterns between weekdays and weekends?\n\nNow let's see if there are some differences between workdays and weekends. \nFirstly we enhance our filled dataset with indicator of type of day.\n```{r}\nactivityDataImp$weekday <- ifelse((!weekdays.Date(activityDataImp$date,TRUE) %in% c('Sat','Sun')),\n                                  'workday','weekend')\n```\n\nNow we compute and plot daily average activity pattern for workdays and weekends.\n```{r}\nsteps_per_interval_weekday <- aggregate(steps ~ interval+weekday, \n                                        activityDataImp, FUN=mean, na.rm=TRUE)\nggplot(steps_per_interval_weekday, aes(x=interval, y=steps)) +   \n        geom_line(size=1, color=\"coral3\") +  facet_grid( weekday ~ .) +\n        labs(title=\"Average Daily Activity Pattern\", x=\"Interval\", y=\"Number of steps\") \n\n\n```\n\n\n\n\n\n\n\n\n",
    "created" : 1436777203265.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "125832410",
    "id" : "57E6CCFD",
    "lastKnownWriteTime" : 1436804096,
    "path" : "D:/Coursera/RepData/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}